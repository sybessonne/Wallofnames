nelmio_security:
    # signs/verifies all cookies
    #signed_cookie:
    #    names: ['*']
    # prevents framing of the entire site
    clickjacking:
        paths:
            '^/.*': DENY
        content_types: []
    # prevents redirections outside the website's domain
    external_redirects:
        abort: true
        log: true


    # prevents inline scripts, unsafe eval, external scripts/images/styles/frames, etc
    csp:
        hash:
            algorithm: sha512 # default is sha256, available are sha256, sha384 and sha512

        enabled: true
        report_logger_service: logger
        hosts: []
        content_types: []
        enforce:
            # see full description below
            level1_fallback: false
            # only send directives supported by the browser, defaults to false
            # this is a port of https://github.com/twitter/secureheaders/blob/83a564a235c8be1a8a3901373dbc769da32f6ed7/lib/secure_headers/headers/policy_management.rb#L97
            browser_adaptive:
                enabled: true
            report-uri: '%router.request_context.base_url%/csp/report'
            default-src: [ 'none' ]
            style-src:
                - 'self' 
                - 'unsafe-inline' 
                - 'maxcdn.bootstrapcdn.com'
            script-src:
                - 'strict-dynamic'
            frame-src: 
                - 'self' 
                - '*.paypal.com' 
                - 'js.stripe.com'
            connect-src:
                - 'self' 
                - '*.paypal.com'
                - '*.instagram.com'
            img-src:
                - 'self'
                - "data: 'unsafe-eval' *.paypal.com stripe-images.s3.amazonaws.com"
                - '*.fbcdn.net'
                - '*.cdninstagram.com'
            object-src: 
                - 'none'
            font-src:
                - 'self' 
                - 'maxcdn.bootstrapcdn.com'
            base-uri:
                - 'self'
            frame-ancestors: 
                - 'none'
            form-action: 
                - 'self'
            media-src:
                - 'self'

            
            block-all-mixed-content: true # defaults to false, blocks HTTP content over HTTPS transport
            # upgrade-insecure-requests: true # defaults to false, upgrades HTTP requests to HTTPS transport
        report:
            # see full description below
            level1_fallback: true
            # only send directives supported by the browser, defaults to false
            # this is a port of https://github.com/twitter/secureheaders/blob/83a564a235c8be1a8a3901373dbc769da32f6ed7/lib/secure_headers/headers/policy_management.rb#L97
            browser_adaptive:
                enabled: true
            report-uri: '%router.request_context.base_url%/csp/report'
            script-src:
                - 'self'
                - 'unsafe-eval'

    # disables content type sniffing for script resources
    content_type:
        nosniff: true

    # forces Microsoft's XSS-Protection with
    # its block mode
    xss_protection:
        enabled: true
        mode_block: true
        report_uri: '%router.request_context.base_url%/xss/report'

    # Send a full URL in the `Referer` header when performing a same-origin request,
    # only send the origin of the document to secure destination (HTTPS->HTTPS),
    # and send no header to a less secure destination (HTTPS->HTTP).
    # If `strict-origin-when-cross-origin` is not supported, use `no-referrer` policy,
    # no referrer information is sent along with requests.
    referrer_policy:
        enabled: true
        policies:
            - 'no-referrer'
            - 'strict-origin-when-cross-origin'

    # forces HTTPS handling, don't combine with flexible mode
    # and make sure you have SSL working on your site before enabling this
#    forced_ssl:
#        enabled: true
#        hsts_max_age: 31536000 # 30 days
#        hsts_subdomains: true
#        redirect_status_code: 301 # default, switch to 301 for permanent redirects
#        hsts_preload: true

    # flexible HTTPS handling, read the detailed config info
    # and make sure you have SSL working on your site before enabling this
#    flexible_ssl:
#        cookie_name: auth
#        unsecured_logout: false